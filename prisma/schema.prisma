generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SentenceType {
  CHECKBOX
  RADIO
  TEXTAREA
  INPUT
  IMAGE
}

model users {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  // role      Role     @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model ParentForm {
  id        Int         @id @default(autoincrement())
  name      String
  prefix    String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  deletedAt DateTime?
  ChildForm ChildForm[]
}

model ChildForm {
  id            Int            @id @default(autoincrement())
  name          String
  prefix        String
  isChild       Boolean
  childParentId Int?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  deletedAt     DateTime?
  parentId      Int?
  parent        ParentForm?    @relation(fields: [parentId], references: [id])
  FormTemplate  FormTemplate[]
}

model FormTemplate {
  id             Int              @id @default(autoincrement())
  name           String
  childFormId    Int
  childForm      ChildForm?       @relation(fields: [childFormId], references: [id])
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  deletedAt      DateTime?
  TemplateSchema TemplateSchema[]
}

model TemplateSchema {
  id         Int           @id @default(autoincrement())
  name       String
  templateId Int
  template   FormTemplate? @relation(fields: [templateId], references: [id])
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  deletedAt  DateTime?
  sentences  Sentences[]
}

model Sentences {
  id             Int              @id @default(autoincrement())
  sentence       String
  options        Json             @db.JsonB
  order          Int
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  deletedAt      DateTime?
  templateSchema TemplateSchema[]
}
